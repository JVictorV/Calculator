{"version":3,"sources":["Components/CalcButton.jsx","serviceWorker.js","App.jsx","index.js","Components/Calculator.jsx"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","CalcButton","props","name","type","click","a","createElement","className","baseName","getClassName","onClick","Boolean","window","location","hostname","match","App","react_default","Calculator","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","state","currentOperation","memory","changeSignal","_this","newValue","eval","setState","clear","option","length","newP","substr","findResult","_this$state","lastSimbol","stringToEval","concat","isNaN","solution","numberOperationHandler","data","newOp","_this$state2","toString","_this$state3","this","op","react__WEBPACK_IMPORTED_MODULE_5___default","_CalcButton__WEBPACK_IMPORTED_MODULE_6__","Component"],"mappings":"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","file":"static/js/main.29811f8e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst CalcButton = props => {\r\n\tconst { name, type, click } = props;\r\n\r\n\tfunction getClassName() {\r\n\t\tlet baseName = 'button--base ';\r\n\t\tswitch (type) {\r\n\t\t\tcase 'operation': {\r\n\t\t\t\tbaseName += 'button-operation';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tcase 'option': {\r\n\t\t\t\tbaseName += 'button-option';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tdefault:\r\n\t\t\t\tbaseName += 'button-number';\r\n\t\t}\r\n\t\treturn baseName;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<button\r\n\t\t\ttype='button'\r\n\t\t\tclassName={getClassName()}\r\n\t\t\tonClick={() => click(name, type === 'operation')}\r\n\t\t>\r\n\t\t\t{name}\r\n\t\t</button>\r\n\t);\r\n};\r\n\r\nexport default CalcButton;\r\n","/* eslint-disable no-console */\r\n/* eslint-disable no-param-reassign */\r\n/* eslint-disable no-undef */\r\n/* eslint-disable no-use-before-define */\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n\twindow.location.hostname === 'localhost' ||\r\n\t\t// [::1] is the IPv6 localhost address.\r\n\t\twindow.location.hostname === '[::1]' ||\r\n\t\t// 127.0.0.1/8 is considered localhost for IPv4.\r\n\t\twindow.location.hostname.match(\r\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n\t\t)\r\n);\r\n\r\nexport function register(config) {\r\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n\t\t// The URL constructor is available in all browsers that support SW.\r\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n\t\tif (publicUrl.origin !== window.location.origin) {\r\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\r\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\r\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\twindow.addEventListener('load', () => {\r\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n\t\t\tif (isLocalhost) {\r\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\r\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\r\n\r\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\r\n\t\t\t\t// service worker/PWA documentation.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\r\n\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\r\n\t\t\t\t\t\t\t'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// Is not localhost. Just register service worker\r\n\t\t\t\tregisterValidSW(swUrl, config);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n\tnavigator.serviceWorker\r\n\t\t.register(swUrl)\r\n\t\t.then(registration => {\r\n\t\t\tregistration.onupdatefound = () => {\r\n\t\t\t\tconst installingWorker = registration.installing;\r\n\t\t\t\tif (installingWorker == null) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tinstallingWorker.onstatechange = () => {\r\n\t\t\t\t\tif (installingWorker.state === 'installed') {\r\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\r\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\r\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\r\n\t\t\t\t\t\t\t// content until all client tabs are closed.\r\n\t\t\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\r\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\r\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// At this point, everything has been precached.\r\n\t\t\t\t\t\t\t// It's the perfect time to display a\r\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\r\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\r\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.error('Error during service worker registration:', error);\r\n\t\t});\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n\t// Check if the service worker can be found. If it can't reload the page.\r\n\tfetch(swUrl)\r\n\t\t.then(response => {\r\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\r\n\t\t\tconst contentType = response.headers.get('content-type');\r\n\t\t\tif (\r\n\t\t\t\tresponse.status === 404 ||\r\n\t\t\t\t(contentType != null &&\r\n\t\t\t\t\tcontentType.indexOf('javascript') === -1)\r\n\t\t\t) {\r\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\r\n\t\t\t\t\tregistration.unregister().then(() => {\r\n\t\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// Service worker found. Proceed as normal.\r\n\t\t\t\tregisterValidSW(swUrl, config);\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(() => {\r\n\t\t\tconsole.log(\r\n\t\t\t\t'No internet connection found. App is running in offline mode.'\r\n\t\t\t);\r\n\t\t});\r\n}\r\n\r\nexport function unregister() {\r\n\tif ('serviceWorker' in navigator) {\r\n\t\tnavigator.serviceWorker.ready.then(registration => {\r\n\t\t\tregistration.unregister();\r\n\t\t});\r\n\t}\r\n}\r\n","import React from 'react';\r\nimport Calculator from './Components/Calculator';\r\nimport './Components/styles.scss';\r\n\r\nconst App = () => (\r\n\t<div className='container'>\r\n\t\t<Calculator />\r\n\t</div>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n","/* eslint-disable no-restricted-globals */\r\n/* eslint-disable no-eval */\r\nimport React, { Component } from 'react';\r\nimport CalcButton from './CalcButton';\r\n\r\nclass Calculator extends Component {\r\n\tstate = {\r\n\t\tcurrentOperation: '',\r\n\t\tmemory: ''\r\n\t};\r\n\r\n\tchangeSignal = () => {\r\n\t\tconst { currentOperation } = this.state;\r\n\t\tconst newValue = eval(currentOperation) * -1;\r\n\t\tthis.setState({\r\n\t\t\tcurrentOperation: newValue\r\n\t\t});\r\n\t};\r\n\r\n\tclear = option => {\r\n\t\tswitch (option) {\r\n\t\t\tcase 'CE': {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tcurrentOperation: '',\r\n\t\t\t\t\tmemory: ''\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 'C': {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tcurrentOperation: ''\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 'X': {\r\n\t\t\t\tconst { currentOperation } = this.state;\r\n\t\t\t\tif (currentOperation.length > 0) {\r\n\t\t\t\t\tconst newP = currentOperation.substr(\r\n\t\t\t\t\t\t0,\r\n\t\t\t\t\t\tcurrentOperation.length - 1\r\n\t\t\t\t\t);\r\n\t\t\t\t\tthis.setState({ currentOperation: newP });\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tdefault:\r\n\t\t}\r\n\t};\r\n\r\n\tfindResult = () => {\r\n\t\tconst { currentOperation, memory } = this.state;\r\n\t\tconst lastSimbol = memory.substr(-1);\r\n\r\n\t\tlet stringToEval = `${memory}${currentOperation}`;\r\n\r\n\t\tif (isNaN(lastSimbol) && currentOperation.length === 0) {\r\n\t\t\tstringToEval = memory.substr(0, memory.length - 1);\r\n\t\t}\r\n\r\n\t\tconst solution = eval(stringToEval);\r\n\r\n\t\tthis.setState({ currentOperation: solution, memory: '' });\r\n\t};\r\n\r\n\tnumberOperationHandler = (data, newOp) => {\r\n\t\tconst { currentOperation, memory } = this.state;\r\n\t\tconst lastSimbol = memory.substr(-1);\r\n\r\n\t\tif (\r\n\t\t\tcurrentOperation.toString() === 'NaN' ||\r\n\t\t\tcurrentOperation.toString() === 'Infinity' ||\r\n\t\t\tcurrentOperation.toString() === '-Infinity'\r\n\t\t) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tcurrentOperation: ''\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (newOp) {\r\n\t\t\tif (isNaN(lastSimbol) && currentOperation.length === 0) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\tcurrentOperation: '',\r\n\t\t\t\tmemory: `${memory} ${currentOperation} ${data}`\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.setState({\r\n\t\t\tcurrentOperation: currentOperation + data\r\n\t\t});\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { currentOperation, memory } = this.state;\r\n\r\n\t\tconst {\r\n\t\t\tnumberOperationHandler: op,\r\n\t\t\tfindResult,\r\n\t\t\tchangeSignal,\r\n\t\t\tclear\r\n\t\t} = this;\r\n\r\n\t\treturn (\r\n\t\t\t<div className='calculator'>\r\n\t\t\t\t<span className='memory'>{memory.toString()}</span>\r\n\t\t\t\t<span className='visor'>{currentOperation.toString()}</span>\r\n\t\t\t\t<CalcButton name='CE' type='option' click={clear} />\r\n\t\t\t\t<CalcButton name='C' type='option' click={clear} />\r\n\t\t\t\t<CalcButton name='X' type='option' click={clear} />\r\n\t\t\t\t<CalcButton name='/' type='operation' click={op} />\r\n\t\t\t\t<CalcButton name='7' click={op} />\r\n\t\t\t\t<CalcButton name='8' click={op} />\r\n\t\t\t\t<CalcButton name='9' click={op} />\r\n\t\t\t\t<CalcButton name='*' type='operation' click={op} />\r\n\t\t\t\t<CalcButton name='4' click={op} />\r\n\t\t\t\t<CalcButton name='5' click={op} />\r\n\t\t\t\t<CalcButton name='6' click={op} />\r\n\t\t\t\t<CalcButton name='-' type='operation' click={op} />\r\n\t\t\t\t<CalcButton name='1' click={op} />\r\n\t\t\t\t<CalcButton name='2' click={op} />\r\n\t\t\t\t<CalcButton name='3' click={op} />\r\n\t\t\t\t<CalcButton name='+' type='operation' click={op} />\r\n\t\t\t\t<CalcButton name='±' type='option' click={changeSignal} />\r\n\t\t\t\t<CalcButton name='0' click={op} />\r\n\t\t\t\t<CalcButton name='.' type='option' click={op} />\r\n\t\t\t\t<CalcButton name='=' type='operation' click={findResult} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Calculator;\r\n"],"sourceRoot":""}